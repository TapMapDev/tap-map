import 'package:equatable/equatable.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:tap_map/src/features/userFlow/map/icons/data/icons_repository.dart';
import 'package:tap_map/src/features/userFlow/map/icons/model/icons_response_modal.dart';

part 'icons_event.dart';
part 'icons_state.dart';

class IconsBloc extends Bloc<IconsEvent, IconsState> {
  final IconsRepository iconsRepository;

  IconsBloc(this.iconsRepository) : super(IconsInitial()) {
    on<FetchIconsEvent>(_onFetchIcons);
  }

  Future<void> _onFetchIcons(
      FetchIconsEvent event, Emitter<IconsState> emit) async {
    debugPrint(
        'üîÑ IconsBloc: –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∏–∫–æ–Ω–æ–∫ –¥–ª—è —Å—Ç–∏–ª—è ${event.styleId}');
    emit(IconsLoading());
    try {
      final icons = await iconsRepository.fetchIcons(event.styleId);
      debugPrint('üì¶ IconsBloc: –ü–æ–ª—É—á–µ–Ω–æ ${icons.length} –∏–∫–æ–Ω–æ–∫');

      if (icons.isEmpty) {
        debugPrint(
            '‚ö†Ô∏è IconsBloc: –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏–∫–æ–Ω–æ–∫ –¥–ª—è —Å—Ç–∏–ª—è ${event.styleId}');
        emit(IconsError(message: "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏–∫–æ–Ω–æ–∫ –¥–ª—è —ç—Ç–æ–≥–æ —Å—Ç–∏–ª—è"));
      } else {
        // ‚úÖ –§–æ—Ä–º–∏—Ä—É–µ–º Map: { "name" -> "text_color" }
        final Map<String, String> textColors = {
          for (var icon in icons) icon.name: icon.textColor
        };

        debugPrint(
            'üì¶ IconsBloc: –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∫–æ–Ω–∫–∏: ${icons.map((e) => e.name).join(', ')}');
        emit(IconsSuccess(
            icons: icons, styleId: event.styleId, textColors: textColors));
      }
    } catch (e) {
      debugPrint('‚ùå IconsBloc: –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∫–æ–Ω–æ–∫: $e');
      emit(IconsError(message: "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∫–æ–Ω–æ–∫"));
    }
  }
}
