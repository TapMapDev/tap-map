import 'package:flutter/foundation.dart';
import 'package:tap_map/core/network/api_service.dart';
import 'package:tap_map/src/features/userFlow/map/icons/model/icons_response_modal.dart';

abstract class IconsRepository {
  Future<List<IconsResponseModel>> fetchIcons(int styleId);
}

class IconsRepositoryImpl implements IconsRepository {
  final ApiService apiService;

  IconsRepositoryImpl({required this.apiService});

  @override
  Future<List<IconsResponseModel>> fetchIcons(int styleId) async {
    debugPrint('üîÑ –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∏–∫–æ–Ω–∫–∏ –¥–ª—è —Å—Ç–∏–ª—è $styleId');
    final response = await apiService.getData('/styles/$styleId/icons/');
    debugPrint('üì¶ –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç API: ${response.toString()}');

    if (response.containsKey('statusCode') && response['statusCode'] == 200) {
      final List<dynamic> data = response['data'] ?? [];
      debugPrint('üì¶ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∫–æ–Ω–æ–∫ –≤ –æ—Ç–≤–µ—Ç–µ: ${data.length}');

      if (data.isEmpty) {
        debugPrint('‚ö†Ô∏è –ü–æ–ª—É—á–µ–Ω –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ –∏–∫–æ–Ω–æ–∫ –æ—Ç API');
      }

      final icons =
          data.map((item) => IconsResponseModel.fromJson(item)).toList();
      debugPrint(
          'üì¶ –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –∏–∫–æ–Ω–∫–∏: ${icons.map((e) => e.name).join(', ')}');
      return icons;
    } else if (response['statusCode'] == 401) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ 401: –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å API-—Ç–æ–∫–µ–Ω.');
      throw Exception('–û—à–∏–±–∫–∞ 401: –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å API-—Ç–æ–∫–µ–Ω.');
    } else {
      debugPrint(
          '‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∫–æ–Ω–æ–∫: ${response['statusCode'] ?? "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å"}');
      throw Exception(
          '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∫–æ–Ω–æ–∫: ${response['statusCode'] ?? "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å"}');
    }
  }
}
